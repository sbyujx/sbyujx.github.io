---
layout: post
title:  "字符集和编码"
date:   2017-06-29 09:18:55 +0800
categories: c#
---
字符集和编码
==============
## ASCII编码
ASCII(American Standard Code for Information Interchange)：美国信息交换标准代码
* ASCII字符集(7位)
![ASCII字符集(7位)](http://images.cnblogs.com/cnblogs_com/skynet/201105/2011050311372042.png)
* ASCII扩展字符集(8位)/EASCII
![ASCII扩展字符集(8位)](http://images.cnblogs.com/cnblogs_com/skynet/201105/201105031137219627.png)
---------------------
## 国标编码(GBXXXX)
* GB2312(-80)
  > 把那些127号之后的奇异符号们（即EASCII）取消掉，规定：一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字，前面的一个字节（称之为高字节）从0xA1用到 0xF7，后面一个字节（低字节）从0xA1到0xFE，这样我们就可以组合出大约7000多个简体汉字了。在这些编码里，还把数学符号、罗马希腊的字母、日文的假名们都编进去了，连在ASCII里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的"全角"字符，而原来在127号以下的那些就叫"半角"字符了。</br>
  GB2312-80一共收录了6763个汉字。

  ![GB2312](http://images.cnblogs.com/cnblogs_com/skynet/201105/201105031137227086.png)
* GBK
> 厂商微软利用GB2312-80未使用的编码空间，收录GB13000.1-93全部字符制定了GBK编码。根据微软资料，GBK是对GB2312-80的扩展，也就是CP936字码表 (Code Page 936)的扩展（之前CP936和GB2312-80一模一样），最早实现于Windows 95简体中文版。虽然GBK收录GB13000.1-93的全部字符，但编码方式并不相同。GBK自身并非国家标准，只是曾由国家技术监督局标准化司、电子工业部科技与质量监督司公布为"技术规范指导性文件"。原始GB13000一直未被业界采用，后续国家标准GB18030技术上兼容GBK而非GB13000。
* GB18030(-2005)
> 中华人民共和国现时最新的内码字集，是GB18030-2000的修订版。与GB 2312-1980完全兼容，与GBK基本兼容，支持GB13000及Unicode的全部统一汉字，共收录汉字70244个。</br>
>1. 与UTF-8相同，采用多字节编码，每个字可以由1个、2个或4个字节组成。
>2. 编码空间庞大，最多可定义161万个字符。
>3. 支持中国国内少数民族的文字，不需要动用造字区。
>4. 汉字收录范围包含繁体汉字以及日韩汉字。
-----------------------
## BIG5编码
> 普及于港台澳等繁体字区域，非国家标准，只是业界标准。</br>
采用双八码存储方法，以两个字节来安放一个字。第一个字节称为"高位字节"，第二个字节称为"低位字节"。"高位字节"使用了0x81-0xFE，"低位字节"使用了0x40-0x7E，及0xA1-0xFE。

-------------------------------------
## Unicode字符集
